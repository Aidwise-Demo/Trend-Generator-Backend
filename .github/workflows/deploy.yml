name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main  # Deploy only when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
      env:
        SSH_PRIVATE_KEY: |
          -----BEGIN OPENSSH PRIVATE KEY-----
          b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
          QyNTUxOQAAACBYAzI8nAn7yBAsCT0GRwSHZ3mlf/RJRy3uD1I+SJLgdgAAAJgpgHrfKYB6
          3wAAAAtzc2gtZWQyNTUxOQAAACBYAzI8nAn7yBAsCT0GRwSHZ3mlf/RJRy3uD1I+SJLgdg
          AAAECGTWwHZiXKe8jCCBlrL+r9NK/3SXxzSJ8pM8+IY1/ZwFgDMjycCfvIECwJPQZHBIdn
          eaV/9ElHLe4PUj5IkuB2AAAAD2RlbW9AYWlkd2lzZS5haQECAwQFBg==
          -----END OPENSSH PRIVATE KEY-----

    - name: Deploy Code to VPS
      run: |
        ssh -o StrictHostKeyChecking=no root@193.203.160.132 "mkdir -p /home/deployment/trend-generator"
        rsync -avz --exclude='.git' ./ root@193.203.160.132:/home/deployment/trend-generator/

    - name: Set up Python Virtual Environment on VPS
      run: |
        ssh -o StrictHostKeyChecking=no root@193.203.160.132 << 'EOF'
          cd /home/deployment/trend-generator
          # Install python3-venv if it's not already installed
          sudo apt-get update
          sudo apt-get install -y python3-venv python3-pip
          # Create a virtual environment
          python3 -m venv venv
          # Activate the virtual environment
          source venv/bin/activate
          # Install necessary Python packages inside the virtual environment (add more as needed)
          pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt file
        EOF

    - name: Build and Run Docker Container on VPS
      run: |
        ssh -o StrictHostKeyChecking=no root@193.203.160.132 << 'EOF'
          cd /home/deployment/trend-generator
          echo "GOOGLE_API_KEY_AIDWISE_DEMO=${{ secrets.GOOGLE_API_KEY_AIDWISE_DEMO }}" >> .env
          echo "EMAIL_ADDRESS_AIDWISE_DEMO=${{ secrets.EMAIL_ADDRESS_AIDWISE_DEMO }}" >> .env
          echo "EMAIL_PASSWORD_AIDWISE_DEMO=${{ secrets.EMAIL_PASSWORD_AIDWISE_DEMO }}" >> .env
          echo "MONGO_URI_AIDWISE_DEMO=${{ secrets.MONGO_URI_AIDWISE_DEMO }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME_AIDWISE_DEMO=${{ secrets.CLOUDINARY_CLOUD_NAME_AIDWISE_DEMO }}" >> .env
          echo "CLOUDINARY_API_KEY_AIDWISE_DEMO=${{ secrets.CLOUDINARY_API_KEY_AIDWISE_DEMO }}" >> .env
          echo "CLOUDINARY_API_SECRET_AIDWISE_DEMO=${{ secrets.CLOUDINARY_API_SECRET_AIDWISE_DEMO }}" >> .env
          docker-compose down || true  # Stop any running containers
          docker-compose --env-file .env up --build -d  # Build and run container
        EOF
